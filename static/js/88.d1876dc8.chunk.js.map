{"version":3,"file":"static/js/88.d1876dc8.chunk.js","mappings":"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","sources":["components/FormElement/Button.tsx","components/Navigation/Header.tsx","components/UIElements/Card.tsx","hooks/useHttpClient.ts","modules/selectors/user.ts","components/Item.tsx","components/ListItems.tsx","components/Navigation/MainNavigation.tsx","pages/HomePage.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.scss';\n\ninterface Props {\n  children: ReactNode;\n  href?: string;\n  to?: string;\n  type?: 'button' | 'submit' | 'reset';\n  size?: 'default' | 'small' | 'large';\n  inverse?: boolean;\n  danger?: boolean;\n  onClick?: () => void;\n  disabled?: boolean;\n  transparent?: boolean;\n  icon?: boolean;\n  customClassName?: string;\n}\n\nexport const Button: React.FC<Props> = ({\n  children,\n  href,\n  to,\n  type = 'button',\n  size = 'default',\n  inverse = false,\n  danger = false,\n  onClick,\n  disabled = false,\n  transparent = false,\n  icon = false,\n  customClassName,\n}) => {\n  const buttonClassList = `button ${customClassName && `${customClassName}`} ${\n    icon && 'button__icon'\n  } button--${size} ${inverse ? 'button--inverse' : ''} ${\n    danger ? 'button--danger' : ''\n  } ${transparent ? 'button--transparent' : ''}`;\n\n  if (href) {\n    return (\n      <a className={buttonClassList} href={href}>\n        {children}\n      </a>\n    );\n  }\n  if (to) {\n    return (\n      <Link\n        to={to}\n        // exact={exact}\n        className={buttonClassList}\n      >\n        {children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={buttonClassList}\n      type={type}\n      onClick={onClick}\n      disabled={disabled}\n    >\n      {children}\n    </button>\n  );\n};\n","import React, { FC, ReactNode } from 'react';\nimport './Header.scss';\n\ninterface Props {\n  children: ReactNode;\n}\n\nexport const Header: FC<Props> = ({ children }) => {\n  return <header className=\"header\">{children}</header>;\n};\n","import React, { ReactNode } from 'react';\n\nimport './Card.scss';\n\ninterface CardProps {\n  className?: string;\n  style?: React.CSSProperties;\n  children: ReactNode;\n}\n\nexport const Card: React.FC<CardProps> = ({\n  className = '',\n  style = {},\n  children,\n}) => {\n  return (\n    <div className={`card ${className}`} style={style}>\n      {children}\n    </div>\n  );\n};\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string>();\n\n  const activeHttpRequests = useRef<AbortController[]>([]);\n\n  const sendRequest = useCallback(\n    async (\n      url: string,\n      method: string = 'GET',\n      body: any = null,\n      headers: any = {}\n    ) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal,\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err: any) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(undefined);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import { RootState } from '../store';\n\nexport const getAuth = (state: RootState) => state.user;\n","import React from 'react';\nimport { Card } from './UIElements/Card';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAuth } from '../modules/selectors/user';\nimport { editCurrentProject } from '../modules/actions/mainProjects';\nimport { useNavigate } from 'react-router-dom';\nimport { startLoading } from '../modules/actions/loading';\nimport './Item.scss';\n\ninterface Props {\n  name?: string;\n  logo?: string;\n  description?: string;\n  projectId: string;\n}\n\nexport const Item: React.FC<Props> = ({\n  name,\n  logo,\n  description,\n  projectId,\n}) => {\n  const { token } = useSelector(getAuth);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleClick = (id: string) => {\n    dispatch(startLoading());\n    dispatch(editCurrentProject(token, id) as any);\n    navigate(`/project-edit/${id}`);\n  };\n\n  const img = (\n    <img\n      src={logo ? `${process.env.REACT_APP_BACKEND_URL}/${logo}` : ''}\n      alt=\"logo\"\n    />\n  );\n\n  return (\n    <div onClick={() => handleClick(projectId)}>\n      <Card className=\"item\">\n        {!logo && <div className=\"item__image-empty\" />}\n        {logo && img}\n        <div className=\"item__text-container\">\n          <p className=\"item__name\">{name}</p>\n          <p className=\"item__description\">{description}</p>\n        </div>\n      </Card>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Project } from '../modules/reducers/mainProjects';\nimport { Item } from './Item';\n\ninterface Props {\n  projects: Project[];\n}\n\nexport const ListItems: React.FC<Props> = ({ projects }) => {\n  return (\n    <>\n      {projects.map((project) => (\n        <Item\n          key={project._id}\n          projectId={project._id}\n          name={project.projectName}\n          logo={project.logoUrl}\n          description={project.description}\n        />\n      ))}\n    </>\n  );\n};\n","import React, { ReactNode } from 'react';\nimport { Header } from './Header';\nimport './MainNavigation.scss';\n\ninterface Props {\n  children: ReactNode;\n}\n\nexport const MainNavigation: React.FC<Props> = (props) => {\n  const openDrawerHandler = () => {};\n  return (\n    <>\n      <Header>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        {props.children}\n      </Header>\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHttpClient } from '../hooks/useHttpClient';\nimport {\n  createNewProject,\n  updateProjects,\n} from '../modules/actions/mainProjects';\nimport { LoadingSpinner } from '../components/UIElements/LoadingSpinner';\nimport { RootState } from '../modules/store';\nimport { ListItems } from '../components/ListItems';\nimport { MainNavigation } from '../components/Navigation/MainNavigation';\nimport { Button } from '../components/FormElement/Button';\nimport { useNavigate } from 'react-router-dom';\nimport './HomePage.scss';\n\nconst HomePage: React.FC = () => {\n  const { sendRequest, isLoading } = useHttpClient();\n  const { projects, currentProject } = useSelector(\n    (state: RootState) => state.mainProjects\n  );\n  const { userId, token } = useSelector((state: RootState) => state.user);\n  const navigate = useNavigate();\n  const [isPressed, setIsPressed] = useState<boolean>(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      const res = await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/projects/user/${userId}`\n      );\n      dispatch(updateProjects(res.projects));\n    };\n    fetchProjects();\n  }, [sendRequest, userId, dispatch]);\n\n  useEffect(() => {\n    if (isPressed && currentProject && currentProject.status === 'success') {\n      navigate(`/project-edit/${currentProject._id}`);\n      setIsPressed(false);\n    }\n  }, [currentProject, isPressed, navigate]);\n\n  const handleClick = () => {\n    setIsPressed(true);\n    dispatch(createNewProject(token) as any);\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <MainNavigation>\n          <Button\n            size=\"small\"\n            transparent={true}\n            icon={true}\n            onClick={handleClick}\n          >\n            <img\n              src=\"/plus_icon.svg\"\n              className=\"button__icon\"\n              alt=\"button icon\"\n            />\n          </Button>\n        </MainNavigation>\n        {isLoading && (\n          <div className=\"loading\">\n            <LoadingSpinner />\n          </div>\n        )}\n        {!isLoading && <ListItems projects={projects} />}\n      </div>\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["Button","_ref","children","href","to","_ref$type","type","_ref$size","size","_ref$inverse","inverse","_ref$danger","danger","onClick","_ref$disabled","disabled","_ref$transparent","transparent","_ref$icon","icon","customClassName","buttonClassList","concat","_jsx","className","Link","Header","Card","_ref$className","_ref$style","style","useHttpClient","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","httpAbortCtrl","response","responseData","_args","arguments","wrap","_context","prev","next","length","undefined","AbortController","current","push","fetch","signal","sent","json","filter","reqCtrl","ok","Error","message","abrupt","t0","stop","_x","apply","useEffect","forEach","abortCtrl","abort","clearError","getAuth","state","user","Item","name","logo","description","projectId","token","useSelector","dispatch","useDispatch","navigate","useNavigate","img","src","process","alt","id","startLoading","editCurrentProject","_jsxs","ListItems","projects","_Fragment","map","project","_id","projectName","logoUrl","MainNavigation","props","_useHttpClient","_useSelector","mainProjects","currentProject","_useSelector2","userId","isPressed","setIsPressed","fetchProjects","res","updateProjects","status","createNewProject","LoadingSpinner"],"sourceRoot":""}