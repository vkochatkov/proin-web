{"version":3,"file":"static/js/284.03c7dc9d.chunk.js","mappings":"0KAoBaA,EAA0B,SAAHC,GAa7B,IAZLC,EAAQD,EAARC,SACAC,EAAIF,EAAJE,KACAC,EAAEH,EAAFG,GAAEC,EAAAJ,EACFK,KAAAA,OAAI,IAAAD,EAAG,SAAQA,EAAAE,EAAAN,EACfO,KAAAA,OAAI,IAAAD,EAAG,UAASA,EAAAE,EAAAR,EAChBS,QAAAA,OAAO,IAAAD,GAAQA,EAAAE,EAAAV,EACfW,OAAAA,OAAM,IAAAD,GAAQA,EACdE,EAAOZ,EAAPY,QAAOC,EAAAb,EACPc,SAAAA,OAAQ,IAAAD,GAAQA,EAAAE,EAAAf,EAChBgB,YAAAA,OAAW,IAAAD,GAAQA,EAAAE,EAAAjB,EACnBkB,KAAAA,OAAI,IAAAD,GAAQA,EACZE,EAAenB,EAAfmB,gBAEMC,EAAe,UAAAC,OAAaF,GAAe,GAAAE,OAAOF,GAAiB,KAAAE,OACvEH,GAAQ,eAAc,aAAAG,OACZd,EAAI,KAAAc,OAAIZ,EAAU,kBAAoB,GAAE,KAAAY,OAClDV,EAAS,iBAAmB,GAAE,KAAAU,OAC5BL,EAAc,sBAAwB,IAE1C,OAAId,GAEAoB,EAAAA,EAAAA,KAAA,KAAGC,UAAWH,EAAiBlB,KAAMA,EAAKD,SACvCA,IAIHE,GAEAmB,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CACHrB,GAAIA,EAEJoB,UAAWH,EAAgBnB,SAE1BA,KAKLqB,EAAAA,EAAAA,KAAA,UACEC,UAAWH,EACXf,KAAMA,EACNO,QAASA,EACTE,SAAUA,EAASb,SAElBA,GAGP,C,wJCxCawB,EAAQ,SAACC,GACpB,IAAAC,GAAoCC,EAAAA,EAAAA,UAAS,CAC3CC,MAAOH,EAAMI,cAAgB,GAC7BC,WAAW,EACXC,QAASN,EAAMO,eAAgB,IAC/BC,GAAAC,EAAAA,EAAAA,GAAAR,EAAA,GAJKS,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAK1BI,GAAWC,EAAAA,EAAAA,MACTC,EAAgBd,EAAhBc,GAAIC,EAAYf,EAAZe,QACJZ,EAAmBO,EAAnBP,MAAOG,EAAYI,EAAZJ,SAEfU,EAAAA,EAAAA,YAAU,WACRD,EAAQD,EAAIX,EAAOG,EACrB,GAAG,CAACQ,EAAIX,EAAOG,EAASS,KAExBC,EAAAA,EAAAA,YAAU,WAENhB,EAAMiB,eACY,OAAlBjB,EAAMkB,cACYC,IAAlBnB,EAAMkB,UAEalB,EAAMkB,QAAQJ,IAG/BH,GAAc,SAACS,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACnBD,GAAS,IACZjB,MAAOH,EAAMkB,QAAQJ,IAAG,IAIhC,GAAG,CAACd,EAAMkB,QAASlB,EAAMiB,cAAeH,IAExC,IAAMQ,GAAcC,EAAAA,EAAAA,aC3Df,SAAkBC,EAAIC,GAC3B,IAAIC,EACJ,OAAO,WAAoB,IAAD,IAAAC,EAAAC,UAAAC,OAANC,EAAI,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAJF,EAAIE,GAAAJ,UAAAI,GACtBC,aAAaP,GACbA,EAAYQ,YAAW,WACrBV,EAAEW,WAAC,EAAGL,EACR,GAAGL,EACL,CACF,CDoDIW,EAAS,SAACC,EAAWC,EAAeC,GAClC,IAAMC,EAAUC,EAAAA,EAAAA,YAAAA,UAEhBA,EAAAA,EAAAA,GAAM,CACJC,OAAQ,QACRC,IAAI,GAADhD,OAAKiD,wBAAiC,cAAAjD,OAAa4C,GACtDF,KAAAA,EACAQ,QAAS,CACP,eAAgB,sBAChBC,cAAc,UAADnD,OAAY2C,IAE3BS,YAAaP,EAAQF,QAEpBU,MAAK,SAAA1E,GAAe,IAAZ+D,EAAI/D,EAAJ+D,KACPzB,GAASqC,EAAAA,EAAAA,IAAmBZ,EAAKnB,SACnC,IACCgC,OAAM,WAAO,GAClB,GAAG,KACH,IAGIC,EAAgB,SACpBC,GAEA,IAAMC,EAAWD,EAAME,OAAOnD,MAE9BQ,GAAc,SAACS,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACnBD,GAAS,IACZjB,MAAOkD,EACP/C,QAASN,EAAMuD,WACXvD,EAAMuD,YACNC,EAAAA,EAAAA,IAASH,EAAUrD,EAAMyD,aAAW,IAEtCzD,EAAM0D,YAAc1D,EAAMsC,OAC5BhB,GAAWqC,EAAAA,EAAAA,GAAC,CAAC,EAAE7C,EAAKuC,GAAYrD,EAAMsC,MAAOtC,EAAMuC,UAEvD,EAEMqB,EAAe,WACnBjD,GAAc,SAACS,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACnBD,GAAS,IACZf,WAAW,GAAI,GAEnB,EAEMwD,GAAaC,EAAAA,EAAAA,QAAO,MAWpBC,EACc,UAAlB/D,EAAM+D,SACJnE,EAAAA,EAAAA,KAAA,SACEkB,GAAId,EAAMc,GACVnC,KAAMqB,EAAMrB,KACZqF,YAAahE,EAAMgE,YACnBC,SAAUd,EACVe,OAAQN,EACRzD,MAAOO,EAAWP,SAGpBP,EAAAA,EAAAA,KAAA,YACEkB,GAAId,EAAMc,GACVqD,KAAMnE,EAAMmE,MAAQ,EACpBF,SAAUd,EACVe,OAAQN,EACRzD,MAAOO,EAAWP,MAClBiE,IAAKP,EACL3E,QA3BiB,WACrB,IAAM6E,EAAUF,EAAWQ,QAEvBN,GAAWA,EAAQO,mBAErBP,EAAQO,mBAEZ,EAqBMC,UAAW,SAACnB,GACQ,WAAdA,EAAMoB,KACRC,SAASC,gBAEb,IAIN,OACEC,EAAAA,EAAAA,MAAA,OACE9E,UAAS,gBAAAF,QACNK,EAAMuD,aACN7C,EAAWJ,SACZI,EAAWL,WACX,yBACC9B,SAAA,EAEHqB,EAAAA,EAAAA,KAAA,SAAOgF,QAAS5E,EAAMc,GAAGvC,SAAEyB,EAAM6E,QAChCd,GACC/D,EAAMuD,aAAe7C,EAAWJ,SAAWI,EAAWL,YACtDT,EAAAA,EAAAA,KAAA,KAAArB,SAAIyB,EAAM8E,cAIlB,C,4EErJaC,EAA4B,SAAHzG,GAI/B,IAAD0G,EAAA1G,EAHJuB,UAAAA,OAAS,IAAAmF,EAAG,GAAEA,EAAAC,EAAA3G,EACd4G,MAAAA,OAAK,IAAAD,EAAG,CAAC,EAACA,EACV1G,EAAQD,EAARC,SAEA,OACEqB,EAAAA,EAAAA,KAAA,OAAKC,UAAS,QAAAF,OAAUE,GAAaqF,MAAOA,EAAM3G,SAC/CA,GAGP,C,yFCZa4G,EAAU,SACrBC,EACAC,GAMA,IAAMC,GAAYC,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMC,QAAQ,IAC5D7E,GAAWC,EAAAA,EAAAA,MAqCjB,OAnCAG,EAAAA,EAAAA,YAAU,WACRJ,GACE8E,EAAAA,EAAAA,GAAkB,CAChBC,OAAQP,EACRQ,YAAaP,IAInB,GAAG,IA2BI,CAAEC,UAAAA,EAAWO,cAzBCtE,EAAAA,EAAAA,cACnB,SAACT,EAAIX,EAAOG,GACVM,GACEkF,EAAAA,EAAAA,GAAgB,CACd3F,MAAAA,EACAG,QAAAA,EACAyF,QAASjF,IAGf,GACA,CAACF,IAe+BoF,aAZdzE,EAAAA,EAAAA,cAClB,SAAC0E,EAAWC,GACVtF,GACE8E,EAAAA,EAAAA,GAAkB,CAChBC,OAAQM,EACRL,YAAaM,IAGnB,GACA,CAACtF,IAIL,C,mGCrDauF,EAAgB,WAC3B,IAAAlG,GAAkCC,EAAAA,EAAAA,WAAkB,GAAMM,GAAAC,EAAAA,EAAAA,GAAAR,EAAA,GAAnDmG,EAAS5F,EAAA,GAAE6F,EAAY7F,EAAA,GAC9B8F,GAA0BpG,EAAAA,EAAAA,YAAkBqG,GAAA9F,EAAAA,EAAAA,GAAA6F,EAAA,GAArCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEhBG,GAAqB5C,EAAAA,EAAAA,QAA0B,IAE/C6C,GAAcpF,EAAAA,EAAAA,aAAW,eAAAjD,GAAAsI,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAC7B,SAAAC,EACEpE,GAAW,IAAAD,EAAAsE,EAAAnE,EAAAoE,EAAAC,EAAAC,EAAAC,EAAAxF,UAAA,OAAAiF,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAOoC,OAN/C9E,EAAc0E,EAAAvF,OAAA,QAAAV,IAAAiG,EAAA,GAAAA,EAAA,GAAG,MACjBJ,EAASI,EAAAvF,OAAA,QAAAV,IAAAiG,EAAA,GAAAA,EAAA,GAAG,KACZvE,EAAYuE,EAAAvF,OAAA,QAAAV,IAAAiG,EAAA,GAAAA,EAAA,GAAG,CAAC,EAEhBf,GAAa,GACPY,EAAgB,IAAIQ,gBAC1Bf,EAAmBrC,QAAQqD,KAAKT,GAAeK,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGtBG,MAAMhF,EAAK,CAChCD,OAAAA,EACAsE,KAAAA,EACAnE,QAAAA,EACA+E,OAAQX,EAAcW,SACrB,KAAD,EALY,OAARV,EAAQI,EAAAO,KAAAP,EAAAE,KAAA,GAOaN,EAASY,OAAO,KAAD,GAIxC,GAJIX,EAAYG,EAAAO,KAElBnB,EAAmBrC,QAAUqC,EAAmBrC,QAAQ0D,QACtD,SAACC,GAAO,OAAKA,IAAYf,CAAa,IAGnCC,EAASe,GAAG,CAADX,EAAAE,KAAA,eACR,IAAIU,MAAMf,EAAagB,SAAS,KAAD,GAGnB,OAApB9B,GAAa,GAAOiB,EAAAc,OAAA,SACbjB,GAAY,QAGC,MAHDG,EAAAC,KAAA,GAAAD,EAAAe,GAAAf,EAAA,SAEnBb,EAASa,EAAAe,GAAIF,SACb9B,GAAa,GAAOiB,EAAAe,GAAA,yBAAAf,EAAAgB,OAAA,GAAAvB,EAAA,mBAGvB,gBAAAwB,GAAA,OAAAjK,EAAA6D,MAAA,KAAAP,UAAA,EApC4B,GAqC7B,IAcF,OAPAZ,EAAAA,EAAAA,YAAU,WACR,OAAO,WAEL0F,EAAmBrC,QAAQmE,SAAQ,SAACC,GAAS,OAAKA,EAAUC,OAAO,GACrE,CACF,GAAG,IAEI,CAAEtC,UAAAA,EAAWI,MAAAA,EAAOG,YAAAA,EAAagC,WAXrB,WACjBlC,OAAStF,EACX,EAUF,C,6NC6DA,EA3Ga,WACX,IAAAlB,GAAsCC,EAAAA,EAAAA,WAAS,GAAKM,GAAAC,EAAAA,EAAAA,GAAAR,EAAA,GAA7C2I,EAAWpI,EAAA,GAAEqI,EAAcrI,EAAA,GAClCsI,GAAmC3C,EAAAA,EAAAA,KAA3BC,EAAS0C,EAAT1C,UAAWO,EAAWmC,EAAXnC,YACb/F,GAAWC,EAAAA,EAAAA,MACjBkI,ECRqB,WAMrB,IAAA9I,GAA0BC,EAAAA,EAAAA,UAAiB,IAAGM,GAAAC,EAAAA,EAAAA,GAAAR,EAAA,GAAvCqC,EAAK9B,EAAA,GAAEwI,EAAQxI,EAAA,GACtB8F,GAAsDpG,EAAAA,EAAAA,YAAuBqG,GAAA9F,EAAAA,EAAAA,GAAA6F,EAAA,GAAtE2C,EAAmB1C,EAAA,GAAE2C,EAAsB3C,EAAA,GAClD4C,GAA4BjJ,EAAAA,EAAAA,UAAiB,IAAGkJ,GAAA3I,EAAAA,EAAAA,GAAA0I,EAAA,GAAzCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBxI,GAAWC,EAAAA,EAAAA,MAEX0I,GAAQhI,EAAAA,EAAAA,cACZ,SACEiI,EACAlH,GAEI,IADJmH,EAAoB7H,UAAAC,OAAA,QAAAV,IAAAS,UAAA,GAAAA,UAAA,GAAG,IAAI8H,MAAK,IAAIA,MAAOC,UAAY,MAEvDX,EAAS1G,GACTgH,EAAUE,GACV,IAAMP,EAAsBQ,EAC5BP,EAAuBD,GACvBW,aAAaC,QACX,WACAC,KAAKC,UAAU,CACbV,OAAQG,EACRlH,MAAOA,EACP0H,WAAYf,EAAoBgB,gBAGtC,GACA,IAGIC,GAAS3I,EAAAA,EAAAA,cAAY,WACzByH,EAAS,IACTE,EAAuB,MACvBI,EAAU,IACVM,aAAaO,WAAW,WAC1B,GAAG,IAoCH,OAlCAnJ,EAAAA,EAAAA,YAAU,WACR,IAAIoJ,EACJ,GAAI9H,GAAS2G,EAAqB,CAChC,IAAMoB,EACJpB,EAAoBU,WAAY,IAAID,MAAOC,UAC7CS,EAAclI,WAAWgI,EAAQG,EACnC,MACEpI,aAAamI,GAEf,OAAO,kBAAMnI,aAAamI,EAAa,CACzC,GAAG,CAAC9H,EAAO4H,EAAQjB,KAEnBjI,EAAAA,EAAAA,YAAU,WACR,IAAMsJ,EAAmBV,aAAaW,QAAQ,YAE9C,GAAID,EAAkB,CACpB,IAAME,EAAuBV,KAAKW,MAAMH,GAEpCE,EAAWlI,OAAS,IAAIoH,KAAKc,EAAWR,YAAc,IAAIN,OAC5DH,EACEiB,EAAWnB,OACXmB,EAAWlI,MACX,IAAIoH,KAAKc,EAAWR,aAEtBpJ,GACE8J,EAAAA,EAAAA,GAAY,CACVrB,OAAQmB,EAAWnB,OACnB/G,MAAOkI,EAAWlI,SAI1B,CACF,GAAG,CAACiH,EAAO3I,IAEJ,CAAE0B,MAAAA,EAAOiH,MAAAA,EAAOW,OAAAA,EAAQb,OAAAA,EACjC,CDnEoBsB,GAAVpB,EAAKR,EAALQ,MACFqB,GAAWC,EAAAA,EAAAA,MACjBC,GAAoC3F,EAAAA,EAAAA,GAClC,CACE4F,MAAO,CACL5K,MAAO,GACPG,SAAS,GAEX0K,SAAU,CACR7K,MAAO,GACPG,SAAS,KAGb,GAXMgF,EAASwF,EAATxF,UAAWO,EAAYiF,EAAZjF,aAkBboF,EAAiB,eAAA3M,GAAAsI,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAO3D,GAAqC,IAAA+D,EAAA+D,EAAAC,EAAA1F,EAAA2F,EAAA,OAAAvE,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC7C,GAAvBpE,EAAMiI,kBAEFzC,EAAY,CAADtB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEgBb,EAAY,GAADhH,OACjCiD,wBAAiC,gBACpC,OACAkH,KAAKC,UAAU,CACbgB,MAAOzF,EAAUK,OAAOoF,MAAM5K,MAC9B6K,SAAU1F,EAAUK,OAAOqF,SAAS7K,QAEtC,CACE,eAAgB,qBAElB,KAAD,EAVKgH,EAAYG,EAAAO,KAWlB+C,EAAS,KACThK,GAAS8J,EAAAA,EAAAA,GAAYvD,IAErBoC,EAAMpC,EAAakC,OAAQlC,EAAa7E,OAAOgF,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAe,GAAAf,EAAA,iBAAAA,EAAAE,KAAA,iBAMqB,OANrBF,EAAAC,KAAA,IAIzC9B,EAAW,IAAI6F,UACZC,OAAO,SAA+B,QAAtBL,EAAA5F,EAAUK,OAAOoF,aAAK,IAAAG,OAAA,EAAtBA,EAAwB/K,QAAS,IAC1DsF,EAAS8F,OAAO,YAAqC,QAAzBJ,EAAA7F,EAAUK,OAAOqF,gBAAQ,IAAAG,OAAA,EAAzBA,EAA2BhL,QAAS,IAAImH,EAAAE,KAAA,GAEzCb,EAAY,GAADhH,OACjCiD,wBAAiC,iBACpC,OACAkH,KAAKC,UAAU,CACbgB,MAAOzF,EAAUK,OAAOoF,MAAM5K,MAC9B6K,SAAU1F,EAAUK,OAAOqF,SAAS7K,QAEtC,CACE,eAAgB,qBAElB,KAAD,GAVKgH,EAAYG,EAAAO,KAWlB+C,EAAS,KACThK,GAAS8J,EAAAA,EAAAA,GAAYvD,IAErBoC,EAAMpC,EAAakC,OAAQlC,EAAa7E,OAAOgF,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAkE,GAAAlE,EAAA,mCAAAA,EAAAgB,OAAA,GAAAvB,EAAA,2BAGpD,gBA5CsBwB,GAAA,OAAAjK,EAAA6D,MAAA,KAAAP,UAAA,KA8CvB,OACEhC,EAAAA,EAAAA,KAAC6L,EAAAA,SAAc,CAAAlN,UACboG,EAAAA,EAAAA,MAACI,EAAAA,EAAI,CAAClF,UAAU,iBAAgBtB,SAAA,CAC7B6H,IAAaxG,EAAAA,EAAAA,KAAC8L,EAAAA,EAAc,CAACC,WAAS,IACtC/C,GAAchJ,EAAAA,EAAAA,KAAA,MAAArB,SAAI,oCAAaqB,EAAAA,EAAAA,KAAA,MAAArB,SAAI,kEACpCqB,EAAAA,EAAAA,KAAA,UACA+E,EAAAA,EAAAA,MAAA,QAAMiH,SAAUX,EAAkB1M,SAAA,EAChCqB,EAAAA,EAAAA,KAACG,EAAAA,EAAK,CACJgE,QAAQ,QACRjD,GAAG,QACHnC,KAAK,QACLkG,MAAM,SACNpB,WAAY,EAACoI,EAAAA,EAAAA,OACb/G,UAAU,sCACV/D,QAAS8E,KAEXjG,EAAAA,EAAAA,KAACG,EAAAA,EAAK,CACJgE,QAAQ,QACRjD,GAAG,WACHnC,KAAK,WACLkG,MAAM,WACNpB,WAAY,EAACqI,EAAAA,EAAAA,IAAoB,IACjChH,UAAU,wDACV/D,QAAS8E,KAEXjG,EAAAA,EAAAA,KAACvB,EAAAA,EAAM,CAACM,KAAK,SAASS,UAAWkG,EAAUhF,QAAQ/B,SAChDqK,EAAc,QAAU,eAG7BjE,EAAAA,EAAAA,MAACtG,EAAAA,EAAM,CAACU,SAAO,EAACG,QA/EI,WACxB2J,GAAe,SAACkD,GAAQ,OAAMA,CAAQ,GACxC,EA6EiDxN,SAAA,CAAC,aAC/BqK,EAAc,SAAW,eAK9C,C,sHEvHMoD,EAAyB,UACzBC,EAA2B,YAC3BC,EAA2B,YAG3BC,EAAuB,QAKhBL,EAAsB,SAACM,GAAG,MAAM,CAC3CzN,KAAMsN,EACNG,IAAKA,EACN,EAOYP,EAAkB,WAAH,MAAU,CAAElN,KAAMwN,EAAsB,EAEvD3I,EAAW,SAACrD,EAAOsD,GAC9B,IACkC4I,EAD9B/L,GAAU,EAAKgM,GAAAC,EAAAA,EAAAA,GACK9I,GAAU,IAAlC,IAAA6I,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAoC,CAAC,IAA1BC,EAASN,EAAAlM,MACdwM,EAAUhO,OAASqN,IACrB1L,EAAUA,GAAWH,EAAMyM,OAAO/K,OAAS,GAEzC8K,EAAUhO,OAASsN,IACrB3L,EAAUA,GAAWH,EAAMyM,OAAO/K,QAAU8K,EAAUP,KAEpDO,EAAUhO,OAASuN,IACrB5L,EAAUA,GAAWH,EAAMyM,OAAO/K,QAAU8K,EAAUP,KA7BjC,QA+BnBO,EAAUhO,OACZ2B,EAAUA,IAAYH,GAASwM,EAAUP,KA/BpB,QAiCnBO,EAAUhO,OACZ2B,EAAUA,IAAYH,GAASwM,EAAUP,KAEvCO,EAAUhO,OAASwN,IACrB7L,EAAUA,GAAW,iBAAiBuM,KAAK1M,GAE/C,CAAC,OAAA2M,GAAAR,EAAAS,EAAAD,EAAA,SAAAR,EAAAU,GAAA,CACD,OAAO1M,CACT,C","sources":["components/FormElement/Button.tsx","components/FormElement/Input.tsx","utils/debounce.js","components/UIElements/Card.tsx","hooks/useForm.ts","hooks/useHttpClient.ts","pages/Auth.tsx","hooks/useAuth.ts","utils/validators.js"],"sourcesContent":["import React, { ReactNode } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.scss';\n\ninterface Props {\n  children: ReactNode;\n  href?: string;\n  to?: string;\n  type?: 'button' | 'submit' | 'reset';\n  size?: 'default' | 'small' | 'large';\n  inverse?: boolean;\n  danger?: boolean;\n  onClick?: () => void;\n  disabled?: boolean;\n  transparent?: boolean;\n  icon?: boolean;\n  customClassName?: string;\n}\n\nexport const Button: React.FC<Props> = ({\n  children,\n  href,\n  to,\n  type = 'button',\n  size = 'default',\n  inverse = false,\n  danger = false,\n  onClick,\n  disabled = false,\n  transparent = false,\n  icon = false,\n  customClassName,\n}) => {\n  const buttonClassList = `button ${customClassName && `${customClassName}`} ${\n    icon && 'button__icon'\n  } button--${size} ${inverse ? 'button--inverse' : ''} ${\n    danger ? 'button--danger' : ''\n  } ${transparent ? 'button--transparent' : ''}`;\n\n  if (href) {\n    return (\n      <a className={buttonClassList} href={href}>\n        {children}\n      </a>\n    );\n  }\n  if (to) {\n    return (\n      <Link\n        to={to}\n        // exact={exact}\n        className={buttonClassList}\n      >\n        {children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={buttonClassList}\n      type={type}\n      onClick={onClick}\n      disabled={disabled}\n    >\n      {children}\n    </button>\n  );\n};\n","import { useEffect, useState, useRef, useCallback } from 'react';\nimport { validate } from '../../utils/validators';\nimport { debounce } from '../../utils/debounce';\nimport axios from 'axios';\nimport { editProjectSuccess } from '../../modules/actions/mainProjects';\nimport { useDispatch } from 'react-redux';\nimport './Input.scss';\n\ntype InputProps = {\n  id: string;\n  element?: 'input' | 'textarea';\n  type?: string;\n  label: string;\n  placeholder?: string;\n  initialValue?: string;\n  initialValid?: boolean;\n  isAutosave?: boolean;\n  validators?: { type: string }[];\n  onInput: (id: string, value: string, isValid: boolean) => void;\n  rows?: number;\n  errorText?: string;\n  isAnyValue?: boolean;\n  projectId?: string;\n  token?: string;\n  stateToUpdate?: boolean;\n  project?: any;\n};\n\nexport const Input = (props: InputProps) => {\n  const [inputState, setInputState] = useState({\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false,\n  });\n  const dispatch = useDispatch();\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  useEffect(() => {\n    if (\n      props.stateToUpdate &&\n      props.project !== null &&\n      props.project !== undefined\n    ) {\n      const inputValue = props.project[id];\n\n      if (inputValue) {\n        setInputState((prevState) => ({\n          ...prevState,\n          value: props.project[id],\n        }));\n      }\n    }\n  }, [props.project, props.stateToUpdate, id]);\n\n  const saveChanges = useCallback(\n    debounce((data: any, token: string, projectId: string) => {\n      const request = axios.CancelToken.source();\n\n      axios({\n        method: 'PATCH',\n        url: `${process.env.REACT_APP_BACKEND_URL}/projects/${projectId}`,\n        data,\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${token}`,\n        },\n        cancelToken: request.token,\n      })\n        .then(({ data }) => {\n          dispatch(editProjectSuccess(data.project));\n        })\n        .catch(() => {});\n    }, 1000),\n    []\n  );\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    const newValue = event.target.value;\n\n    setInputState((prevState) => ({\n      ...prevState,\n      value: newValue,\n      isValid: props.isAnyValue\n        ? props.isAnyValue\n        : validate(newValue, props.validators),\n    }));\n    if (props.isAutosave && props.token) {\n      saveChanges({ [id]: newValue }, props.token, props.projectId);\n    }\n  };\n\n  const touchHandler = () => {\n    setInputState((prevState) => ({\n      ...prevState,\n      isTouched: true,\n    }));\n  };\n\n  const elementRef = useRef(null);\n\n  const openFullscreen = () => {\n    const element = elementRef.current;\n    //@ts-ignore because of openFullscreen\n    if (element && element.requestFullscreen) {\n      //@ts-ignore\n      element.requestFullscreen();\n    }\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n        ref={elementRef}\n        onClick={openFullscreen}\n        onKeyDown={(event) => {\n          if (event.key === 'Escape') {\n            document.exitFullscreen();\n          }\n        }}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !props.isAnyValue &&\n        !inputState.isValid &&\n        inputState.isTouched &&\n        'form-control--invalid'\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!props.isAnyValue && !inputState.isValid && inputState.isTouched && (\n        <p>{props.errorText}</p>\n      )}\n    </div>\n  );\n};\n","export function debounce(fn, delay) {\n  let timeoutId;\n  return function (...args) {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => {\n      fn(...args);\n    }, delay);\n  };\n}\n","import React, { ReactNode } from 'react';\n\nimport './Card.scss';\n\ninterface CardProps {\n  className?: string;\n  style?: React.CSSProperties;\n  children: ReactNode;\n}\n\nexport const Card: React.FC<CardProps> = ({\n  className = '',\n  style = {},\n  children,\n}) => {\n  return (\n    <div className={`card ${className}`} style={style}>\n      {children}\n    </div>\n  );\n};\n","import { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFormInput, setFormDataAction } from '../modules/actions/form';\nimport { FormState, SetFormDataType } from '../modules/reducers/formReducer';\nimport { RootState } from '../modules/store';\n\ntype InputHandler = (id: string, value: string, isValid: boolean) => void;\n\nexport const useForm = (\n  initialInputs: FormState['inputs'],\n  initialFormValidity: FormState['isValid']\n): {\n  formState: FormState;\n  inputHandler: InputHandler;\n  setFormData: SetFormDataType;\n} => {\n  const formState = useSelector((state: RootState) => state.formData);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(\n      setFormDataAction({\n        inputs: initialInputs,\n        formIsValid: initialFormValidity,\n      })\n    );\n    // eslint-disable-next-line\n  }, []);\n\n  const inputHandler = useCallback<InputHandler>(\n    (id, value, isValid) => {\n      dispatch(\n        changeFormInput({\n          value,\n          isValid,\n          inputId: id,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  const setFormData = useCallback<SetFormDataType>(\n    (inputData, formValidity) => {\n      dispatch(\n        setFormDataAction({\n          inputs: inputData,\n          formIsValid: formValidity,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  return { formState, inputHandler, setFormData };\n};\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string>();\n\n  const activeHttpRequests = useRef<AbortController[]>([]);\n\n  const sendRequest = useCallback(\n    async (\n      url: string,\n      method: string = 'GET',\n      body: any = null,\n      headers: any = {}\n    ) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal,\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err: any) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(undefined);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React, { useState } from 'react';\nimport { Card } from '../components/UIElements/Card';\nimport { Input } from '../components/FormElement/Input';\nimport { Button } from '../components/FormElement/Button';\nimport { useNavigate } from 'react-router-dom';\nimport { LoadingSpinner } from '../components/UIElements/LoadingSpinner';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH } from '../utils/validators';\nimport { useForm } from '../hooks/useForm';\nimport { useHttpClient } from '../hooks/useHttpClient';\nimport { useAuth } from '../hooks/useAuth';\nimport { useDispatch } from 'react-redux';\nimport { updateLogin } from '../modules/actions/user';\nimport './Auth.scss';\n\nconst Auth = () => {\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, sendRequest } = useHttpClient();\n  const dispatch = useDispatch();\n  const { login } = useAuth();\n  const navigate = useNavigate();\n  const { formState, inputHandler } = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false,\n      },\n      password: {\n        value: '',\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    setIsLoginMode((prevMode) => !prevMode);\n  };\n\n  const authSubmitHandler = async (event: { preventDefault: () => void }) => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/users/login`,\n          'POST',\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value,\n          }),\n          {\n            'Content-Type': 'application/json',\n          }\n        );\n        navigate('/');\n        dispatch(updateLogin(responseData));\n\n        login(responseData.userId, responseData.token);\n      } catch (err) {}\n    } else {\n      try {\n        const formData = new FormData();\n        formData.append('email', formState.inputs.email?.value || '');\n        formData.append('password', formState.inputs.password?.value || '');\n\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/users/signup`,\n          'POST',\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value,\n          }),\n          {\n            'Content-Type': 'application/json',\n          }\n        );\n        navigate('/');\n        dispatch(updateLogin(responseData));\n\n        login(responseData.userId, responseData.token);\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        {isLoginMode ? <h2>Логін</h2> : <h2>Реєстрація</h2>}\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Please enter a valid password, at least 6 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n","import { useState, useCallback, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateLogin } from '../modules/actions/user';\n\ninterface UserData {\n  userId: string;\n  token: string;\n  expiration: string;\n}\n\nexport const useAuth = (): {\n  token: string;\n  login: (userId: string, token: string, expirationDate?: Date) => void;\n  logout: () => void;\n  userId: string;\n} => {\n  const [token, setToken] = useState<string>('');\n  const [tokenExpirationDate, setTokenExpirationDate] = useState<Date | null>();\n  const [userId, setUserId] = useState<string>('');\n  const dispatch = useDispatch();\n\n  const login = useCallback(\n    (\n      uid: string,\n      token: string,\n      expirationDate: Date = new Date(new Date().getTime() + 1000 * 60 * 60)\n    ) => {\n      setToken(token);\n      setUserId(uid);\n      const tokenExpirationDate = expirationDate;\n      setTokenExpirationDate(tokenExpirationDate);\n      localStorage.setItem(\n        'userData',\n        JSON.stringify({\n          userId: uid,\n          token: token,\n          expiration: tokenExpirationDate.toISOString(),\n        })\n      );\n    },\n    []\n  );\n\n  const logout = useCallback(() => {\n    setToken('');\n    setTokenExpirationDate(null);\n    setUserId('');\n    localStorage.removeItem('userData');\n  }, []);\n\n  useEffect(() => {\n    let logoutTimer: NodeJS.Timeout;\n    if (token && tokenExpirationDate) {\n      const remainingTime =\n        tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer!);\n    }\n    return () => clearTimeout(logoutTimer);\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedDataString = localStorage.getItem('userData');\n\n    if (storedDataString) {\n      const storedData: UserData = JSON.parse(storedDataString);\n\n      if (storedData.token && new Date(storedData.expiration) > new Date()) {\n        login(\n          storedData.userId,\n          storedData.token,\n          new Date(storedData.expiration)\n        );\n        dispatch(\n          updateLogin({\n            userId: storedData.userId,\n            token: storedData.token,\n          })\n        );\n      }\n    }\n  }, [login, dispatch]);\n\n  return { token, login, logout, userId };\n};\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MAXLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n"],"names":["Button","_ref","children","href","to","_ref$type","type","_ref$size","size","_ref$inverse","inverse","_ref$danger","danger","onClick","_ref$disabled","disabled","_ref$transparent","transparent","_ref$icon","icon","customClassName","buttonClassList","concat","_jsx","className","Link","Input","props","_useState","useState","value","initialValue","isTouched","isValid","initialValid","_useState2","_slicedToArray","inputState","setInputState","dispatch","useDispatch","id","onInput","useEffect","stateToUpdate","project","undefined","prevState","_objectSpread","saveChanges","useCallback","fn","delay","timeoutId","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","apply","debounce","data","token","projectId","request","axios","method","url","process","headers","Authorization","cancelToken","then","editProjectSuccess","catch","changeHandler","event","newValue","target","isAnyValue","validate","validators","isAutosave","_defineProperty","touchHandler","elementRef","useRef","element","placeholder","onChange","onBlur","rows","ref","current","requestFullscreen","onKeyDown","key","document","exitFullscreen","_jsxs","htmlFor","label","errorText","Card","_ref$className","_ref$style","style","useForm","initialInputs","initialFormValidity","formState","useSelector","state","formData","setFormDataAction","inputs","formIsValid","inputHandler","changeFormInput","inputId","setFormData","inputData","formValidity","useHttpClient","isLoading","setIsLoading","_useState3","_useState4","error","setError","activeHttpRequests","sendRequest","_asyncToGenerator","_regeneratorRuntime","mark","_callee","body","httpAbortCtrl","response","responseData","_args","wrap","_context","prev","next","AbortController","push","fetch","signal","sent","json","filter","reqCtrl","ok","Error","message","abrupt","t0","stop","_x","forEach","abortCtrl","abort","clearError","isLoginMode","setIsLoginMode","_useHttpClient","_useAuth","setToken","tokenExpirationDate","setTokenExpirationDate","_useState5","_useState6","userId","setUserId","login","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","logout","removeItem","logoutTimer","remainingTime","storedDataString","getItem","storedData","parse","updateLogin","useAuth","navigate","useNavigate","_useForm","email","password","authSubmitHandler","_formState$inputs$ema","_formState$inputs$pas","_responseData","preventDefault","FormData","append","t1","React","LoadingSpinner","asOverlay","onSubmit","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","prevMode","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","val","_step","_iterator","_createForOfIteratorHelper","s","n","done","validator","trim","test","err","e","f"],"sourceRoot":""}