{"version":3,"file":"static/js/671.15c772fb.chunk.js","mappings":"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","sources":["components/FormElement/Button.tsx","components/FormElement/Input.tsx","utils/debounce.js","components/Navigation/Header.tsx","hooks/useForm.ts","modules/selectors/user.ts","modules/selectors/mainProjects.ts","components/FormElement/ImageUpload.tsx","modules/selectors/loading.ts","pages/EditProject.tsx","utils/validators.js"],"sourcesContent":["import React, { ReactNode } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.scss';\n\ninterface Props {\n  children: ReactNode;\n  href?: string;\n  to?: string;\n  type?: 'button' | 'submit' | 'reset';\n  size?: 'default' | 'small' | 'large';\n  inverse?: boolean;\n  danger?: boolean;\n  onClick?: () => void;\n  disabled?: boolean;\n  transparent?: boolean;\n  icon?: boolean;\n  customClassName?: string;\n}\n\nexport const Button: React.FC<Props> = ({\n  children,\n  href,\n  to,\n  type = 'button',\n  size = 'default',\n  inverse = false,\n  danger = false,\n  onClick,\n  disabled = false,\n  transparent = false,\n  icon = false,\n  customClassName,\n}) => {\n  const buttonClassList = `button ${customClassName && `${customClassName}`} ${\n    icon && 'button__icon'\n  } button--${size} ${inverse ? 'button--inverse' : ''} ${\n    danger ? 'button--danger' : ''\n  } ${transparent ? 'button--transparent' : ''}`;\n\n  if (href) {\n    return (\n      <a className={buttonClassList} href={href}>\n        {children}\n      </a>\n    );\n  }\n  if (to) {\n    return (\n      <Link\n        to={to}\n        // exact={exact}\n        className={buttonClassList}\n      >\n        {children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={buttonClassList}\n      type={type}\n      onClick={onClick}\n      disabled={disabled}\n    >\n      {children}\n    </button>\n  );\n};\n","import { useEffect, useState, useRef, useCallback } from 'react';\nimport { validate } from '../../utils/validators';\nimport { debounce } from '../../utils/debounce';\nimport axios from 'axios';\nimport { editProjectSuccess } from '../../modules/actions/mainProjects';\nimport { useDispatch } from 'react-redux';\nimport './Input.scss';\n\ntype InputProps = {\n  id: string;\n  element?: 'input' | 'textarea';\n  type?: string;\n  label: string;\n  placeholder?: string;\n  initialValue?: string;\n  initialValid?: boolean;\n  isAutosave?: boolean;\n  validators?: { type: string }[];\n  onInput: (id: string, value: string, isValid: boolean) => void;\n  rows?: number;\n  errorText?: string;\n  isAnyValue?: boolean;\n  projectId?: string;\n  token?: string;\n  stateToUpdate?: boolean;\n  project?: any;\n};\n\nexport const Input = (props: InputProps) => {\n  const [inputState, setInputState] = useState({\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false,\n  });\n  const dispatch = useDispatch();\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  useEffect(() => {\n    if (\n      props.stateToUpdate &&\n      props.project !== null &&\n      props.project !== undefined\n    ) {\n      const inputValue = props.project[id];\n\n      if (inputValue) {\n        setInputState((prevState) => ({\n          ...prevState,\n          value: props.project[id],\n        }));\n      }\n    }\n  }, [props.project, props.stateToUpdate, id]);\n\n  const saveChanges = useCallback(\n    debounce((data: any, token: string, projectId: string) => {\n      const request = axios.CancelToken.source();\n\n      axios({\n        method: 'PATCH',\n        url: `${process.env.REACT_APP_BACKEND_URL}/projects/${projectId}`,\n        data,\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${token}`,\n        },\n        cancelToken: request.token,\n      })\n        .then(({ data }) => {\n          dispatch(editProjectSuccess(data.project));\n        })\n        .catch(() => {});\n    }, 1000),\n    []\n  );\n\n  const changeHandler = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    const newValue = event.target.value;\n\n    setInputState((prevState) => ({\n      ...prevState,\n      value: newValue,\n      isValid: props.isAnyValue\n        ? props.isAnyValue\n        : validate(newValue, props.validators),\n    }));\n    if (props.isAutosave && props.token) {\n      saveChanges({ [id]: newValue }, props.token, props.projectId);\n    }\n  };\n\n  const touchHandler = () => {\n    setInputState((prevState) => ({\n      ...prevState,\n      isTouched: true,\n    }));\n  };\n\n  const elementRef = useRef(null);\n\n  const openFullscreen = () => {\n    const element = elementRef.current;\n    //@ts-ignore because of openFullscreen\n    if (element && element.requestFullscreen) {\n      //@ts-ignore\n      element.requestFullscreen();\n    }\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n        ref={elementRef}\n        onClick={openFullscreen}\n        onKeyDown={(event) => {\n          if (event.key === 'Escape') {\n            document.exitFullscreen();\n          }\n        }}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !props.isAnyValue &&\n        !inputState.isValid &&\n        inputState.isTouched &&\n        'form-control--invalid'\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!props.isAnyValue && !inputState.isValid && inputState.isTouched && (\n        <p>{props.errorText}</p>\n      )}\n    </div>\n  );\n};\n","export function debounce(fn, delay) {\n  let timeoutId;\n  return function (...args) {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => {\n      fn(...args);\n    }, delay);\n  };\n}\n","import React, { FC, ReactNode } from 'react';\nimport './Header.scss';\n\ninterface Props {\n  children: ReactNode;\n}\n\nexport const Header: FC<Props> = ({ children }) => {\n  return <header className=\"header\">{children}</header>;\n};\n","import { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFormInput, setFormDataAction } from '../modules/actions/form';\nimport { FormState, SetFormDataType } from '../modules/reducers/formReducer';\nimport { RootState } from '../modules/store';\n\ntype InputHandler = (id: string, value: string, isValid: boolean) => void;\n\nexport const useForm = (\n  initialInputs: FormState['inputs'],\n  initialFormValidity: FormState['isValid']\n): {\n  formState: FormState;\n  inputHandler: InputHandler;\n  setFormData: SetFormDataType;\n} => {\n  const formState = useSelector((state: RootState) => state.formData);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(\n      setFormDataAction({\n        inputs: initialInputs,\n        formIsValid: initialFormValidity,\n      })\n    );\n    // eslint-disable-next-line\n  }, []);\n\n  const inputHandler = useCallback<InputHandler>(\n    (id, value, isValid) => {\n      dispatch(\n        changeFormInput({\n          value,\n          isValid,\n          inputId: id,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  const setFormData = useCallback<SetFormDataType>(\n    (inputData, formValidity) => {\n      dispatch(\n        setFormDataAction({\n          inputs: inputData,\n          formIsValid: formValidity,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  return { formState, inputHandler, setFormData };\n};\n","import { RootState } from '../store';\n\nexport const getAuth = (state: RootState) => state.user;\n","import { RootState } from '../store';\n\nexport const getCurrentProject = (state: RootState) => {\n  return state.mainProjects.currentProject;\n};\n","import React, { useRef, useState, useEffect, FC } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { Button } from './Button';\nimport { getAuth } from '../../modules/selectors/user';\nimport { editProjectSuccess } from '../../modules/actions/mainProjects';\nimport { getCurrentProject } from '../../modules/selectors/mainProjects';\nimport { endLoading } from '../../modules/actions/loading';\nimport './ImageUpload.scss';\n\ntype ImageUploadProps = {\n  id: string;\n  center?: boolean;\n  projectId?: string;\n  onInput: (id: string, value: string, isValid: boolean) => void;\n  stateToUpdate?: boolean;\n};\n\nexport const ImageUpload: FC<ImageUploadProps> = ({\n  id,\n  center,\n  onInput,\n  projectId,\n  stateToUpdate,\n}) => {\n  const [file, setFile] = useState<File | undefined>();\n  const [previewUrl, setPreviewUrl] = useState<string | undefined>('');\n  const [isValid, setIsValid] = useState<boolean>(false);\n  const { token } = useSelector(getAuth);\n  const dispatch = useDispatch();\n  const currentProject = useSelector(getCurrentProject);\n\n  const filePickerRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (stateToUpdate && currentProject) {\n      const isNotEmptyValue = Boolean(currentProject[id]);\n\n      if (isNotEmptyValue) {\n        const logoUrl = `${process.env.REACT_APP_BACKEND_URL}/${currentProject[id]}`;\n        setPreviewUrl(logoUrl);\n        onInput(id, logoUrl, true);\n        dispatch(endLoading());\n      }\n    }\n  }, [currentProject, stateToUpdate]);\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result as string);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const sendRequest = async (id: string, token: string, file: File) => {\n    const httpSource = axios.CancelToken.source();\n\n    const formData = new FormData();\n\n    formData.append('image', file);\n\n    try {\n      const response = await axios({\n        method: 'PATCH',\n        url: `${process.env.REACT_APP_BACKEND_URL}/projects/${id}`,\n        data: formData,\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${token}`,\n        },\n        cancelToken: httpSource.token,\n      });\n\n      return response.data;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  const pickedHandler = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n\n    let value;\n\n    if (projectId && pickedFile) {\n      const res = await sendRequest(projectId, token, pickedFile);\n      value = res.project.logoUrl;\n\n      dispatch(editProjectSuccess(res.project));\n    }\n\n    onInput(id, value, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current?.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${center ? 'center' : ''}`}>\n        {previewUrl && (\n          <div className=\"image-upload__preview\">\n            <img src={previewUrl} alt=\"Preview\" />\n          </div>\n        )}\n        <Button type=\"button\" onClick={pickImageHandler}>\n          Обери лого\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import { RootState } from '../store';\n\nexport const getIsLoading = (state: RootState) => state.isLoading;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LoadingSpinner } from '../components/UIElements/LoadingSpinner';\nimport { Input } from '../components/FormElement/Input';\nimport { useForm } from '../hooks/useForm';\nimport { ImageUpload } from '../components/FormElement/ImageUpload';\nimport { getCurrentProject } from '../modules/selectors/mainProjects';\nimport { getAuth } from '../modules/selectors/user';\nimport { Button } from '../components/FormElement/Button';\nimport { useNavigate } from 'react-router-dom';\nimport { Header } from '../components/Navigation/Header';\nimport { getIsLoading } from '../modules/selectors/loading';\nimport { endLoading } from '../modules/actions/loading';\n\ntype Props = {};\n\nconst EditProject: React.FC<Props> = () => {\n  const { token } = useSelector(getAuth);\n  const isLoading = useSelector(getIsLoading);\n  const currentProject = useSelector(getCurrentProject);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { inputHandler } = useForm(\n    {\n      projectName: {\n        value: '',\n        isValid: true,\n      },\n      description: {\n        value: '',\n        isValid: true,\n      },\n    },\n    true\n  );\n\n  useEffect(() => {\n    dispatch(endLoading());\n  }, []);\n\n  const handleClick = () => {\n    navigate('/');\n  };\n\n  return (\n    <div className=\"container\">\n      <Header>\n        <Button\n          size=\"small\"\n          transparent={true}\n          icon={true}\n          customClassName=\"header__btn-close\"\n          onClick={handleClick}\n        >\n          <img src=\"/close.svg\" alt=\"close_logo\" className=\"button__icon\" />\n        </Button>\n        <Button customClassName=\"header__btn-transparent\" onClick={handleClick}>\n          СТВОРИТИ\n        </Button>\n      </Header>\n      {isLoading ? (\n        <LoadingSpinner />\n      ) : (\n        <div>\n          <>\n            <ImageUpload\n              center\n              id=\"logoUrl\"\n              onInput={inputHandler}\n              projectId={currentProject ? currentProject._id : undefined}\n              stateToUpdate={true}\n            />\n            <Input\n              id=\"projectName\"\n              element=\"input\"\n              type=\"text\"\n              label=\"Ім'я нового проекту\"\n              onInput={inputHandler}\n              isAnyValue={true}\n              isAutosave={true}\n              projectId={currentProject ? currentProject._id : undefined}\n              token={token}\n              stateToUpdate={true}\n              project={currentProject}\n            />\n            <Input\n              id=\"description\"\n              element=\"textarea\"\n              label=\"Опис\"\n              onInput={inputHandler}\n              isAnyValue={true}\n              isAutosave={true}\n              projectId={currentProject ? currentProject._id : undefined}\n              token={token}\n              stateToUpdate={true}\n              project={currentProject}\n            />\n          </>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EditProject;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MAXLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n"],"names":["Button","_ref","children","href","to","_ref$type","type","_ref$size","size","_ref$inverse","inverse","_ref$danger","danger","onClick","_ref$disabled","disabled","_ref$transparent","transparent","_ref$icon","icon","customClassName","buttonClassList","concat","_jsx","className","Link","Input","props","_useState","useState","value","initialValue","isTouched","isValid","initialValid","_useState2","_slicedToArray","inputState","setInputState","dispatch","useDispatch","id","onInput","useEffect","stateToUpdate","project","undefined","prevState","_objectSpread","saveChanges","useCallback","fn","delay","timeoutId","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","apply","debounce","data","token","projectId","request","axios","method","url","process","headers","Authorization","cancelToken","then","editProjectSuccess","catch","changeHandler","event","newValue","target","isAnyValue","validate","validators","isAutosave","_defineProperty","touchHandler","elementRef","useRef","element","placeholder","onChange","onBlur","rows","ref","current","requestFullscreen","onKeyDown","key","document","exitFullscreen","_jsxs","htmlFor","label","errorText","Header","useForm","initialInputs","initialFormValidity","formState","useSelector","state","formData","setFormDataAction","inputs","formIsValid","inputHandler","changeFormInput","inputId","setFormData","inputData","formValidity","getAuth","user","getCurrentProject","mainProjects","currentProject","ImageUpload","center","file","setFile","_useState3","_useState4","previewUrl","setPreviewUrl","_useState5","_useState6","setIsValid","filePickerRef","Boolean","logoUrl","endLoading","fileReader","FileReader","onload","result","readAsDataURL","sendRequest","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","httpSource","response","wrap","_context","prev","next","FormData","append","sent","abrupt","t0","stop","_x","_x2","_x3","pickedHandler","_ref3","_callee2","pickedFile","fileIsValid","res","_context2","files","_x4","style","display","accept","src","alt","_filePickerRef$curren","click","getIsLoading","isLoading","navigate","useNavigate","projectName","description","handleClick","LoadingSpinner","_Fragment","_id","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","_step","_iterator","_createForOfIteratorHelper","s","n","done","validator","trim","test","err","e","f"],"sourceRoot":""}